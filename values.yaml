# Default values for nil-router.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: us-central1-docker.pkg.dev/hbl-poc-enterprisefac-pm-prj/data-ingestion-repo/nil-router
  # This sets the pull policy for images.
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

# This is for the secretes for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

#This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
    #"helm.sh/hook": pre-install,pre-upgrade,
    #"helm.sh/hook-weight": "-4",
    #"helm.sh/hook-delete-policy": before-hook-creation
  #}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "uam-epricing-sa@hbl-poc-enterprisefac-pm-prj.iam.gserviceaccount.com"

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {
  dapr.io/enabled: 'true',
  dapr.io/app-id: 'nilrouter',
  dapr.io/app-port: '1035',
  dapr.io/log-level: 'debug',
  dapr.io/sidecar-image: 'us-central1-docker.pkg.dev/hbl-poc-enterprisefac-pm-prj/data-ingestion-repo/daprd:1.14.4',
  dapr.io/enable-app-health-check: "true",
  dapr.io/app-health-check-path: "/healthz",
  dapr.io/graceful-shutdown-seconds: '300',
  dapr.io/sidecar-cpu-request: '100m',
  dapr.io/sidecar-cpu-limit: '500m',
  dapr.io/sidecar-memory-request: '128Mi',
  dapr.io/sidecar-memory-limit: '500Mi',
  dapr.io/http-max-request-size: "500000",
  dapr.io/log-as-json: "true",
  dapr.io/log-level: "info",
  dapr.io/metrics-port: "9090",
  #Increase Readiness Probe Delay to 180 seconds (3 minutes)
  dapr.io/sidecar-readiness-probe-delay-seconds: "180",
  dapr.io/sidecar-readiness-probe-period-seconds: "5",
  dapr.io/sidecar-readiness-probe-threshold: "5",
  dapr.io/sidecar-readiness-probe-timeout-seconds: "5",
  #Increase Liveness Probe Delay to 180 seconds (3 minutes)
  dapr.io/sidecar-liveness-probe-delay-seconds: "180",
  dapr.io/sidecar-liveness-probe-period-seconds: "5",
  dapr.io/sidecar-liveness-probe-threshold: "5",
  dapr.io/sidecar-liveness-probe-timeout-seconds: "5",
  dapr.io/sidecar-listen-address: "0.0.0.0",
  dapr.io/rawpayload: "true"
}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 1035

# Please provide the below enabled value as true or false for respective cloud
cloud:
  provider:
    gcp:
      enabled: true
    aws:
      enabled: false

envFrom:
  configMapName: nil-router-configmap

envValues:
  port: "1035"
  #Please provide STORAGE_ENABLED as true or false for respective cloud
  MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE: "*"
  MANAGEMENT_METRICS_PROMETHEUS_ENABLED: 'true'
  SPRINGBOOT_PROMETHEUS_ENABLED: 'true'
  KAFKA_BROKER: "34.28.251.45:9092"
  KAFKA_CONSUMER_GROUP: "nil-router-consumer"
  KAFKA_CLIENT_ID: "dapr-pubsub-nilrouter-id"
  KAFKA_AUTH_TYPE: "none"
  KAFKA_MSG_BYTES: "500000"
  KAFKA_CONSUMER_RETRY_ENABLED: 'false'
  KAFKA_DISABLE_TLS: 'true'
  KAFKA_AUTH_REQUIRED: 'false'
  KAFKA_RETRY_INTERVAL: "5s"
  KAFKA_MAX_RETRY_COUNT: "3"
  KAFKA_TOPIC_NAME: "SFMSTOPIC2"
  KAFAKA_ROUTE: "/process"
  KAFAKA_PUB_SUB_NAME: "kafka-nilrouter-pubsub-component"
  PUB_SUB_RETRY_POLICY: "constant"
  PUB_SUB_RETRY_DURATION: "5s"
  PUB_SUB_MAX_RETRY: "3"
  PUB_SUB_TIME_OUT: "15s"
  LOG_LEVEL: "INFO"
  datasourceUrl: "jdbc:postgresql://34.135.239.235:5432/postgresdb"
  dbusername: "admin"
  password: "test123"
  diverclassname: "org.postgresql.Driver"
  ROUTING_HEADER: "testHeader"
  ROUTING_CHANNEL1: "pacs008"
  ROUTING_CHANNEL2: "camt59"
  ROUTING_CHANNEL3: "camt_52_54"
  ROUTING_CHANNEL4: "camt_52_54"
  ROUTING_CHANNEL5: "admi004"
  ROUTING_CHANNEL6: "pacs002"
  MAPPING_PACS008: "//*[local-name()=\"CdtTrfTxInf\"]"
  MAPPING_CAMT59: "//*[local-name()=\"OrgnlNtfctnRef\"]"
  FCTOPIC: "FCTOPIC"
  EPHTOPIC: "EPHTOPIC"
  SFMSTOPIC: "SFMSTOPIC"
  MSGTOPIC: "MSGEVENTTRACKERTOPIC"
  CUG_FLAG : 'false'

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /healthz
    port: 1035
  initialDelaySeconds: 180  # Wait 3 minutes before checking
  periodSeconds: 10         # Check every 10 seconds
  failureThreshold: 5       # Fail only after 5 failed checks
  timeoutSeconds: 5         # Allow 5 seconds per check

readinessProbe:
  httpGet:
    path: /ready
    port: 1035
  initialDelaySeconds: 180  # Wait 3 minutes before checking
  periodSeconds: 10         # Check every 10 seconds
  failureThreshold: 5       # Fail only after 5 failed checks
  timeoutSeconds: 5         # Allow 5 seconds per check

#This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector:
  gcp:
    cloud.google.com/gke-nodepool: new-pool
  aws: {}

tolerations:
  gcp: []
  aws: []

affinity:
  gcp: {}
  aws: {}
